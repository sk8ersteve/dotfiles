#!/bin/bash

# This is bound to Alt+Shift+PrintScreen by default, requires
# gpu-screen-recorder.
#
# TODO: Allow selecting a window to record.

filename="$HOME/vids/ScreenRecording_$(date '+%Y-%m-%d_%H-%M-%S').mp4"
audio=$(pactl get-default-source)
is_active="$(systemctl --user is-active gpu-screen-recorder.service)"
is_enabled="$(systemctl --user is-enabled gpu-screen-recorder.service)"

# Account for scenario where service is potentially started but not enabled
if [ $is_active == active ];
then
    # Stop service and start recording
    systemctl --user stop gpu-screen-recorder.service
    notify-send -t 5000 -u low -- "GPU Screen Recorder" "Starting recording"
    gpu-screen-recorder -w screen -f 60 -a $audio -o $filename &
else
    if [ $is_enabled == disabled ];
    then
        # Handles starting and stopping gpu-screen-recorder
        killall -INT gpu-screen-recorder \
            && notify-send -t 5000 -u low -- "GPU Screen Recorder" "Done recording" \
            || gpu-screen-recorder -w screen -f 60 -a $audio -o $filename &
    else
        # If service was enabled but not active, then default action is to start
        # service, regardless of whether gpu-screen-recorder was running
        killall -INT gpu-screen-recorder
        systemctl --user start gpu-screen-recorder.service
        notify-send -t 5000 -u low -- "GPU Screen Recorder" "Done recording\nReplay recording started"
    fi
fi
