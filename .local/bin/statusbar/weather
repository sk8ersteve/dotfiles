#!/bin/sh

# Displays todays precipication chance (☔) and daily low (❄) and high (🌞).
# Usually intended for the statusbar.

url="wttr.in"
weatherreport=${XDG_DATA_HOME:-$HOME/.local/share}/weatherreport

# Get a weather report from 'wttr.in' and save it locally.
getforecast() { curl -sf "$url/$LOCATION" > "$weatherreport" || exit 1; }

# Forecast should be updated only once a day.
checkforecast() {
    [ -s "$weatherreport" ] && [ "$(stat -c %y "$weatherreport" 2>/dev/null |
        cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ]
}

readfile() { weatherdata="$(cat "$weatherreport")"; }

getprecipchance() {
    echo "$weatherdata" | sed '16q;d' | # Extract line 16 from file
        grep -wo "[0-9]*%" |            # Find a sequence of digits followed by '%'
        sort -rn |                      # Sort in descending order
        head -1q                        # Extract first line
}

getdailyhighlow() {
    echo "$weatherdata" | sed '13q;d' |  # Extract line 13 from file
        grep -o "m\\([-+]\\)*[0-9]\\+" | # Find temperatures in the format "m<signed number>"
        sed 's/[+m]//g' |                # Remove '+' and 'm'
        sort -g |                        # Sort in ascending order
        sed -e 1b -e '$!d'               # Extract the first and last lines
}

showweather() {
    readfile
    printf "☔%s 🥶%s° 🌞%s°\n" "$(getprecipchance)" $(getdailyhighlow)
}

# The BLOCK_BUTTON bloat for clicking in i3.
case $BLOCK_BUTTON in
    1) setsid "$TERMINAL" -e less -Srf "$weatherreport" & ;;
    2) getforecast && showweather ;;
    3) notify-send "🌈 Weather module" "\- Left click for full forecast.
- Middle click to update forecast.
☔: Chance of rain/snow
❄: Daily low
🌞: Daily high" ;;
esac

checkforecast || getforecast

showweather
