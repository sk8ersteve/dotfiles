#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

battery_file=~/.local/state/last_battery_capacity
[ -f "$battery_file" ] || echo 100 > $battery_file
last_capacity=$(cat $battery_file)

case $BLOCK_BUTTON in
    3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!" ;;
esac

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
    # Get its remaining capacity and charge status.
    capacity=$(cat "$battery"/capacity) || break
    status=$(sed "s/Discharging/🔋/;s/Not charging/🛑/;s/Charging/🔌/;s/Unknown/♻️/;s/Full/⚡/" "$battery"/status)

    # If it is discharging and 25% or less, we will add a ❗ as a warning.
    [ "$capacity" -le 25 ] && [ "$status" = "🔋" ] && warn="❗"

    # If battery is too low, send notification to user
    [ "$capacity" -le 10 ] && [ "$last_capacity" -gt 10 ] && \
        notify-send "🔋 Battery low ❗"
    [ "$capacity" -le 5 ] && [ "$last_capacity" -gt 5 ] && \
        notify-send "🔋 Battery low ❗"
    echo $capacity > $battery_file

    printf "%s%s%s%% " "$status" "$warn" "$capacity"
    unset warn
done | sed s/\ $/\\n/
